integrations:
  labels:
    { app: mock_app }
  node_exporter:
    enabled: true
logs:
  configs:
  - clients:
    - basic_auth:
        password: ${GRAFANA_CLOUD_ACCESS_TOKEN}
        username: ${GRAFANA_CLOUD_LOGS_USERNAME}
      url: ${GRAFANA_CLOUD_LOGS_URL}
    name: integrations
    positions:
      filename: /tmp/positions.yaml
    target_config:
      sync_period: 10s
    scrape_configs:
    - job_name: springboot_logs
      static_configs:
      - targets: [ localhost ]
        labels:
          app: mock_app
          __path__: ${SPRING_BOOT_APPLICATION_LOG_DIRECTORY}/*.log

metrics:
  wal_directory: /tmp/grafana-agent-wal
  configs:
    - name: spring-apps
      scrape_configs:
        - job_name: springboot_metrics
          metrics_path: '/actuator/prometheus'
          static_configs:
            - targets: ['localhost:8080']
  global:
    external_labels:
      app: mock_app
    scrape_interval: 60s
    remote_write:
      - url: ${GRAFANA_CLOUD_METRICS_URL}
        basic_auth:
          username: ${GRAFANA_CLOUD_METRICS_USERNAME}
          password: ${GRAFANA_CLOUD_ACCESS_TOKEN}

traces:
  configs:
    - name: spring-apps
      remote_write:
        - endpoint: ${GRAFANA_CLOUD_TRACES_URL}
          basic_auth:
            username: ${GRAFANA_CLOUD_TRACES_USERNAME}
            password: ${GRAFANA_CLOUD_ACCESS_TOKEN}
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: localhost:4317